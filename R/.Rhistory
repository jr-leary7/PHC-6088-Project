p19 <- FeaturePlot(fibro_reclust, features = "act_stroma", cols = c("grey90", "firebrick")) +
labs(subtitle = "Activated Stroma") +
theme_yehlab() +
theme(legend.position = "none",
axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p20 <- FeaturePlot(fibro_reclust, features = "endocrine", cols = c("grey90", "firebrick")) +
labs(subtitle = "Endocrine") +
theme_yehlab() +
theme(legend.position = "none",
axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p21 <- (p18 | p0a) / (p19 | p20)
ggarrange(p21) %>%
annotate_figure(bottom = "UMAP 1", left = text_grob("UMAP 2", rot = 360))
fibro_markers %>%
dplyr::select(cluster, gene, avg_log2FC, p_val_adj, pct.1, pct.2) %>%
group_by(cluster) %>%
slice_head(n = 5) %>%
kbl(booktabs = TRUE, col.names = c("Cluster", "Gene", "Mean Log2FC",
"Adj. P-value", "% Expressed 1", "% Expressed 2")) %>%
kable_minimal("hover", full_width = FALSE)
endocrine <- rownames(fibro_reclust[fibro_reclust$seurat_clusters == 1])
head(names(fibro_reclust$seurat_clusters))
endocrine <- names(fibro_reclust$seurat_clusters[fibro_reclust$seurat_clusters == 1])
table(fibro_reclust$seurat_clusters)
table(primary$cell_type)
endocrine <- names(fibro_reclust$seurat_clusters[fibro_reclust$seurat_clusters == 1])
CAF <- names(fibro_reclust$seurat_clusters[fibro_reclust$seurat_clusters == 0])
primary$cell_type <- case_when(primary$seurat_clusters == 0 ~ "Epithelial",
primary$seurat_clusters == 1 ~ "PDAC",
primary$seurat_clusters == 2 ~ "Fibroblast",
primary$seurat_clusters == 3 ~ "Macrophage",
primary$seurat_clusters == 4 ~ "Neutrophil",
primary$seurat_clusters == 5 ~ "Mesenchymal Stem Cell",
primary$seurat_clusters == 6 ~ "Fibroblast",
primary$seurat_clusters == 7 ~ "Endothelial",
rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF")
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
head(rownames(primary@meta.data))
any(rownames(primary@meta.data) %in% endocrine)
primary$cell_type <- case_when(primary@meta.data$seurat_clusters == 0 ~ "Epithelial",
primary@meta.data$seurat_clusters == 1 ~ "PDAC",
primary@meta.data$seurat_clusters == 2 ~ "Fibroblast",
primary@meta.data$seurat_clusters == 3 ~ "Macrophage",
primary@meta.data$seurat_clusters == 4 ~ "Neutrophil",
primary@meta.data$seurat_clusters == 5 ~ "Mesenchymal Stem Cell",
primary@meta.data$seurat_clusters == 6 ~ "Fibroblast",
primary@meta.data$seurat_clusters == 7 ~ "Endothelial",
rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF")
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
any(rownames(primary@meta.data) %in% CAF)
primary$cell_type <- case_when(primary$seurat_clusters == 0 ~ "Epithelial",
primary$seurat_clusters == 1 ~ "PDAC",
primary$seurat_clusters == 2 ~ "Fibroblast",
primary$seurat_clusters == 3 ~ "Macrophage",
primary$seurat_clusters == 4 ~ "Neutrophil",
primary$seurat_clusters == 5 ~ "Mesenchymal Stem Cell",
primary$seurat_clusters == 6 ~ "Fibroblast",
primary$seurat_clusters == 7 ~ "Endothelial",
rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF",
TRUE ~ primary$cell_type)
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
?AddModuleScore
primary$cell_type <- case_when(rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF",
TRUE ~ primary$cell_type)
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
primary$cell_type <- NULL
primary$cell_type <- case_when(primary$seurat_clusters == 0 ~ "Epithelial",
primary$seurat_clusters == 1 ~ "Epithelial",
primary$seurat_clusters == 2 ~ "Fibroblast",
primary$seurat_clusters == 3 ~ "Macrophage",
primary$seurat_clusters == 4 ~ "Neutrophil",
primary$seurat_clusters == 5 ~ "Mesenchymal Stem Cell",
primary$seurat_clusters == 6 ~ "Fibroblast",
primary$seurat_clusters == 7 ~ "Endothelial")
primary$cell_type <- case_when(rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF",
TRUE ~ primary$cell_type)
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
primary$cell_type <- case_when(rownames(primary@meta.data) %in% endocrine ~ "Endocrine",
rownames(primary@meta.data) %in% CAF ~ "CAF",
primary$seurat_clusters == 1 ~ "PDAC",
TRUE ~ primary$cell_type)
p22 <- DimPlot(primary, group.by = "cell_type") +
theme_yehlab()
p22
p22 <- DimPlot(primary, group.by = "cell_type") +
labs(subtitle = "Primary Tumor") +
theme_yehlab() +
theme(axis.title = element_blank())
p22
p22 <- DimPlot(primary, group.by = "cell_type") +
scale_color_paletteer_d("ggthemes::Classic_20") +
labs(subtitle = "Primary Tumor") +
theme_yehlab() +
theme(axis.title = element_blank())
p22
p22 <- DimPlot(primary, group.by = "cell_type") +
scale_color_paletteer_d("ggthemes::Classic_20") +
labs(subtitle = "Primary Tumor") +
theme_yehlab() +
theme(axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p22
p2
p1
meta$cell_type <- case_when(meta$seurat_clusters == 0 ~ "PDAC",
meta$seurat_clusters == 1 ~ "PDAC",
meta$seurat_clusters == 2 ~ "PDAC",
meta$seurat_clusters == 3 ~ "Macrophage",
meta$seurat_clusters == 4 ~ "T")
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[8:10]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p23
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[9:11]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p23
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[10:12]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p23
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[c(8, 10, 11)]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(axis.title = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5))
p23
ggarrange(p22, p23, ncol = 2)
ggarrange(p22, p23, nrow = 2)
ggarrange(p22, p23, ncol = 2)
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[c(8, 10, 11)]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
axis.title = element_blank(),
legend.text = element_text(size = 9),
plot.subtitle = element_text()) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
p23
p22 <- DimPlot(primary, group.by = "cell_type") +
scale_color_paletteer_d("ggthemes::Classic_20") +
labs(subtitle = "Primary Tumor") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
legend.text = element_text(size = 10),
plot.subtitle = element_text(),
axis.title = element_text(hjust = 0, size = 9)) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
p22
p22 <- DimPlot(primary, group.by = "cell_type") +
scale_color_paletteer_d("ggthemes::Classic_20") +
labs(subtitle = "Primary Tumor", x = "UMAP 1", y = "UMAP 2") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
legend.text = element_text(size = 10),
plot.subtitle = element_text(),
axis.title = element_text(hjust = 0, size = 9)) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
p22
theme = theme(plot.title = element_text(size = 16, hjust = 0.5))
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
theme = theme(plot.title = element_text(size = 16, hjust = 0.5)))
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
theme = theme(plot.title = element_text(size = 16, hjust = 0.5)))
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
theme = theme(plot.title = element_text(size = 16, hjust = 0.5)))
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
theme = theme(plot.title = element_text(size = 16, hjust = 0.5)))
p23 <- DimPlot(meta, group.by = "cell_type", cols = paletteer_d("ggthemes::Classic_20")[c(6, 9, 11)]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
axis.title = element_blank(),
legend.text = element_text(size = 9),
plot.subtitle = element_text()) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
p23
(p23 / p22) + plot_annotation(title = "Final Celltype Labels",
theme = theme(plot.title = element_text(size = 16, hjust = 0.5)))
saveRDS(primary, file = "~/Desktop/primary.Rds")
meta$seurat_clusters_orig <- meta$seurat_clusters
meta$seurat_clusters <- case_when(meta$cell_type == "PDAC" ~ 0,
meta$cell_type == "Macrophage" ~ 1,
meta$cell_type == "T" ~ 2)
primary$seurat_clusters_orig <- primary$seurat_clusters
unique(primary$cell_type)
primary$seurat_clusters <- case_when(primary$cell_type == "Endocrine" ~ 0,
primary$cell_type == "CAF" ~ 1,
primary$cell_type == "Epithelial" ~ 2,
primary$cell_type == "Mesenchymal Stem Cell" ~ 3,
primary$cell_type == "Fibroblast" ~ 4,
primary$cell_type == "PDAC" ~ 5,
primary$cell_type == "Neutrophil" ~ 6,
primary$cell_type == "Endothelial" ~ 7,
primary$cell_type == "Macrophage" ~ 8)
primary_markers_final <- FindAllMarkers(primary,
logfc.threshold = 2,
test.use = "wilcox",
verbose = FALSE,
only.pos = TRUE,
random.seed = 629)
colnames(primary_markers_final)
primary_markers_final_top5 <- primary_markers_final %>%
group_by(cluster) %>%
slice_head(n = 5)
primary_markers_final_top5
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick"))
p24
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
meta_markers_final <- FindAllMarkers(meta,
logfc.threshold = 2,
test.use = "wilcox",
verbose = FALSE,
only.pos = TRUE,
random.seed = 629)
meta_markers_final_top5 <- meta_markers_final %>%
group_by(cluster) %>%
slice_head(n = 5)
p25 <- DotPlot(meta, features = meta_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Metastatic Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p25 <- DotPlot(meta, features = unique(meta_markers_final_top5$gene), cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Metastatic Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p25
p25
unique(meta$seurat_clusters)
unique(meta$seurat_clusters_orig)
p24
unique(primary$seurat_clusters)
unique(primary@meta.data$seurat_clusters)
unique(meta@meta.data$seurat_clusters)
DimPlot(meta)
DimPlot(meta, group.by = "seurat_clusters")
DimPlot(meta)
?Ident
?Idents
SetIdent(meta, "cell_type")
SetIdent(meta, cell_type)
SetIdent(meta, value = "cell_type")
DimPlot(meta)
Idents(meta) <- "cell_type"
DimPlot(meta)
Idents(primary) <- "cell_type"
DimPlot(primary)
icaf_genes
FeaturePlot(primary, icaf_genes)
FeaturePlot(primary, mycaf_genes)
FeaturePlot(primary, pan_caf_genes)
primary_markers_final <- FindAllMarkers(primary,
logfc.threshold = 2,
test.use = "wilcox",
verbose = FALSE,
only.pos = TRUE,
random.seed = 629)
primary_markers_final_top5 <- primary_markers_final %>%
group_by(cluster) %>%
slice_head(n = 5)
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cell",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cell",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 8)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cell",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank(),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 8)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
p24 <- DotPlot(primary, features = primary_markers_final_top5$gene, cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cell",
color = "Mean Expression",
size = "Percent Expressed",
title = "Primary Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank(),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 7.5, vjust = 1, hjust = 1),
axis.text.y = element_text(size = 8)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p24
meta_markers_final <- FindAllMarkers(meta,
logfc.threshold = 2,
test.use = "wilcox",
verbose = FALSE,
only.pos = TRUE,
random.seed = 629)
meta_markers_final_top5 <- meta_markers_final %>%
group_by(cluster) %>%
slice_head(n = 5)
p25 <- DotPlot(meta, features = unique(meta_markers_final_top5$gene), cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Metastatic Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(angle = 360, vjust = 0.5),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p25
p25 <- DotPlot(meta, features = unique(meta_markers_final_top5$gene), cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Metastatic Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank(),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p25
meta_markers_final_top7 <- meta_markers_final %>%
group_by(cluster) %>%
slice_head(n = 7)
p25 <- DotPlot(meta, features = unique(meta_markers_final_top7$gene), cols = c("grey90", "firebrick")) +
labs(x = "Gene",
y = "Cluster",
color = "Mean Expression",
size = "Percent Expressed",
title = "Metastatic Tumor Marker Genes") +
theme(legend.position = "bottom",
axis.line = element_blank(),
legend.justification = "center",
plot.title = element_text(hjust = 0.5),
axis.title.y = element_blank(),
panel.border = element_rect(fill = NA, size = 1, color = "black"),
axis.text.x = element_text(angle = 45, size = 8, vjust = 1, hjust = 1)) +
guides(color = guide_colorbar(title.position = "top", title.hjust = 0.5, barwidth = unit(5, "cm")),
size = guide_legend(title.position = "top", title.hjust = 0.5))
p25
saveRDS(primary, file = "~/Desktop/primary.Rds")
saveRDS(meta, file = "~/Desktop/meta.Rds")
dim(primary)
dim(meta)
7372+6848
dim(primary@assays$SCT)
dim(meta@assays$SCT)
"CD3D" %in% rownames(primary@assays$SCT)
"CD3D" %in% rownames(primary@assays$integrated)
p8 <- DimPlot(primary, group.by = "SingleR_bulk") +
labs(x = "UMAP 1", y = "UMAP 2", subtitle = "Primary Tumor") +
scale_color_paletteer_d("ggthemes::Classic_20") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
legend.text = element_text(size = 9),
plot.subtitle = element_text(),
axis.title = element_text(hjust = 0, size = 9)) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
p9 <- DimPlot(meta, group.by = "SingleR_bulk", cols = paletteer_d("ggthemes::Classic_20")[8:11]) +
labs(subtitle = "Metastatic Tumor") +
theme_yehlab() +
theme(legend.position = "right",
plot.title = element_blank(),
axis.title = element_blank(),
legend.text = element_text(size = 9),
plot.subtitle = element_text()) +
guides(color = guide_legend(ncol = 1, override.aes = list(size = 3)))
"CD8A" %in% rownames(primary@assays$SCT)
"CD8A" %in% rownames(primary@assays$integrated)
"CD4" %in% rownames(primary@assays$integrated)
"CD4" %in% rownames(primary@assays$SCT)
p25
?CellCycleScoring
sessionInfo()
install.packages("ggiraph")  # ggplot2-native interactive graphs
reticulate::repl_python()
